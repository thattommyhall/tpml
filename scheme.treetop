grammar Scheme
  rule program
    expressions:(' '* sexp)* {
      def to_ast
        Program.new(*expressions.elements.map{|el| el.to_ast})
      end
    }
  end

  rule sexp
    atom / list
  end

  rule list
    '(' sexps:(' '* sexp ' '*)* ')' {
      def to_ast
        list_contents = sexps.elements.map{|element| element.sexp.to_ast }
        List.new(*list_contents)
      end
    }
  end

  rule space
    [\s\n\r\t]
  end

  rule paren
    [\(\)\[\]]
  end

  rule delimiter
    paren / space
  end

  rule atom
    (!delimiter .)+ {
      def to_ast
        Atom.new(text_value)
      end
    }
  end
end
